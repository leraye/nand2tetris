// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux16(a[0..15]=a[0..15], b[0..15]=b[0..15], sel=sel[0], out[0..15]=aOrb);
    Mux16(a[0..15]=c[0..15], b[0..15]=d[0..15], sel=sel[0], out[0..15]=cOrd);
    Mux16(a[0..15]=e[0..15], b[0..15]=f[0..15], sel=sel[0], out[0..15]=eOrf);
    Mux16(a[0..15]=g[0..15], b[0..15]=h[0..15], sel=sel[0], out[0..15]=gOrh);
    Mux4Way16(a[0..15]=aOrb, b[0..15]=cOrd, c[0..15]=eOrf, d[0..15]=gOrh, sel[0..1]=sel[1..2], out[0..15]=out[0..15]);
/**
    Mux4Way16(a[0..15]=a[0..15], b[0..15]=b[0..15], c[0..15]=c[0..15], d[0..15]=d[0..15], sel[0..1]=sel[0..1], out[0..15]=firstFour);
    Mux4Way16(a[0..15]=e[0..15], b[0..15]=f[0..15], c[0..15]=g[0..15], d[0..15]=h[0..15], sel[0..1]=sel[0..1], out[0..15]=lastFour);
    Mux16(a[0..15]=firstFour, b[0..15]=lastFour, sel=sel[2], out[0..15]=out[0..15]);
*/
}