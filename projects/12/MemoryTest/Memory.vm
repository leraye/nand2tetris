function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 2
push constant 16384
pop static 3
push static 2
pop static 1
push constant 0
push static 1
add
push static 3
push static 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 7
push static 1
pop local 3
push constant 0
pop local 2
push constant 0
pop local 5
push static 1
pop local 4
push argument 0
push constant 1
add
pop local 0
push constant 0
pop local 6
push static 3
push static 2
sub
pop local 1
label WHILE_EXP0
push local 3
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 0
push local 3
add
pop pointer 1
push that 0
push local 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 3
add
pop pointer 1
push that 0
push local 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
pop local 4
push local 2
pop local 5
push constant 0
push local 3
add
pop pointer 1
push that 0
pop local 1
label IF_FALSE1
label IF_FALSE0
push local 3
pop local 2
push constant 1
push local 3
add
pop pointer 1
push that 0
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 4
add
pop pointer 1
push that 0
push constant 2
sub
pop local 1
push local 1
push local 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push local 4
add
push constant 0
push local 4
add
pop pointer 1
push that 0
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 4
add
pop pointer 1
push that 0
push local 4
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 0
push local 4
add
pop pointer 1
push that 0
add
push constant 1
add
pop local 6
push local 5
push local 4
call Memory.remove 2
pop temp 0
push local 4
call Memory.append 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 6
return
label IF_FALSE3
push local 4
call Memory.insert 1
pop temp 0
goto IF_END2
label IF_FALSE2
push local 4
push constant 1
add
pop local 6
push local 5
push local 4
call Memory.remove 2
pop temp 0
label IF_END2
push local 6
return
function Memory.remove 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
push argument 1
add
pop pointer 1
push that 0
pop static 1
goto IF_END0
label IF_FALSE0
push constant 1
push argument 0
add
push constant 1
push argument 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function Memory.append 3
push static 1
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
pop local 1
push local 1
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
label IF_FALSE0
push argument 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
add
pop local 1
push local 1
push local 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push argument 0
add
push constant 0
push argument 0
add
pop pointer 1
push that 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 0
add
push constant 1
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
pop static 1
goto IF_END2
label IF_FALSE2
push constant 1
push local 2
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END2
push constant 0
not
return
label IF_FALSE1
push local 0
pop local 2
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.insert 0
push static 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop static 1
goto IF_END0
label IF_FALSE0
push constant 1
push argument 0
add
push constant 1
push static 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function Memory.deAlloc 0
push argument 0
push constant 1
sub
call Memory.insert 1
pop temp 0
push constant 0
return
