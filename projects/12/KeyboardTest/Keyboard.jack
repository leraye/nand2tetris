// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static Array KBD;
    static char NEWLINE, BACKSPACE;
    static String buffer;
    static int BUFFER_SIZE, currSize;

    /** Initializes the keyboard. */
    function void init() {
        let KBD = 24576;
        let KBD[0] = 0;
        let NEWLINE = String.newLine();
        let BACKSPACE = String.backSpace();
        let BUFFER_SIZE = 10;
        let currSize = 1;
        let buffer = String.new(BUFFER_SIZE);
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return KBD[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;

        while(Keyboard.keyPressed() = 0){}
        let c = Keyboard.keyPressed();
        while(~(Keyboard.keyPressed() = 0)){}
        do Output.printChar(c);
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;

        do Output.printString(message);
        do Keyboard.flushBuffer();

        let c = Keyboard.readChar();
        while(~(c = NEWLINE)){
            if(c = BACKSPACE){
                do Keyboard.removeLast();
            }else{
                do Keyboard.append2Buffer(c);
            }
            let c = Keyboard.readChar();
        }
        return buffer;
    }   

    function void append2Buffer(char c){
        var int i;
        var String temp;

        if(currSize < BUFFER_SIZE){
            do buffer.appendChar(c);
            let currSize = currSize + 1;
        }else{
            let BUFFER_SIZE = 2 * BUFFER_SIZE;
            let temp = String.new(BUFFER_SIZE);
            let i = 0;
            while(i < currSize){
                do temp.appendChar(buffer.charAt(i));
                let i = i + 1;
            }
            do temp.appendChar(c);
            let currSize = currSize + 1;
            do buffer.dispose();
            let buffer = temp;
        }
        return;
    }

    function void flushBuffer(){
        do buffer.dispose();
        let buffer = String.new(BUFFER_SIZE);
        let currSize = 0;
        return;
    }

    function void removeLast(){
        do buffer.eraseLastChar();
        return;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String s;

        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
